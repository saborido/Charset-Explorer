
							INDICE:
							------

		1. Mapa de rutinas y datos en memoria.

		2. Limites de memoria y direcciones cambiantes.

		3. Variables en memoria usados en Save/Load y al Save/Load (al salir del programa).

		4. Variables CharsetExp.

		5. Lineas REM y subrutinas.

		6. To Do.

-------------------------------------------------------------------------------------------------------------------
													--------
			> Mapa de rutinas y datos en memoria <		(R = Rutina asm)		-1 de 6-
			 ------------------------------------						--------

>Zona actual mas alta de la memoria libre (RAMTOP) antes de compilar: 62967.

>Total de bytes actual: 97 bytes en total (de 62968 hasta 63063 inclusives).


-62968-62969:	--- MEMORIA LIBRE ---				-- 2 bytes.

|-62970: Color del fondo de la rejilla.				-- 1 byte.
|-62971: Color de los puntos del fondo de la rejilla +1.	-- 1 byte.
|-62972: Color de la tinta de la rejilla +1.			-- 1 byte.

|-62973: Posición de dirección actual (variable "d").		-- 2 bytes.
|-62974:  " (dir. 16 bit).

		-- A PARTIR DE AQUI SE CARGAN CON EL BLOQUE d_chars.tap --

R:-|62975-62983: Rutina múltiplo de 32 (de vicentecno).		-- 9 bytes.

|-62984: Posición cursor inicio save/load. Múltiplo32 dir.	-- 2 bytes.
|-62985:  " (dir. 16 bit).
|-62986: Longitud de grabación/custom.				-- 2 bytes.
|-62987:  " (dir. 16 bit).
|-62988: Marca inicio de selección/grabación.			-- 2 bytes.
|-62989:  " (dir. 16 bit).
|-62990: Marca final de selección/grabación.			-- 2 bytes.
|-62991:  " (dir. 16 bit).

-62992-62999: Icono Pixel ON (el cuadrado).			-- 8 bytes.
-63000-63007: Icono del candado.				-- 8 bytes.
-63008-63015: Icono triángulo de las bandas de colores.		-- 8 bytes.
-63016-63023: Icono de la mano solar.				-- 8 bytes.
-63024-63031: Guardar charset en edición.			-- 8 bytes.

-------------------------------------------------------------------------------------------------------------------
													--------
					> Limites de memoria <						-2 de 6-
					 --------------------						--------

|-63032: Guardar variable del sistema CHARS actual.		-- 2 bytes.
|-63033:  " (dir. 16 bit).
|-63034: Activador de la barra de UDG's.			-- 1 byte.
|-63035: Guardar color del borde de la pantalla.		-- 1 byte.
|-63036: Guardar en Tape(1), Disk(2), RAM(3).			-- 1 byte.
|-63037: Modo de guardado/carga. Load(0), Save(1), Verify(2).	-- 1 byte.
|-63038: Variable del modo de grabación.			-- 1 byte.

R:|-*63039-63063: Rutina MicroHobby CharSets.			--25 bytes.


Program:	25200 hasta 55736, pero poner en 56000 para dar margen (en realidad el programa acaba en 55240).
Free memory:	56000 hasta 62967.
Datas & vars:	62968 (en realidad 62975) hasta 63038.
MH routine:	63039 hasta 63063.
MHchars:	63064 hasta 65367.
UDG:		65368 hasta 65519 (128k) o hasta 65535 (48k).


			> Partes donde se usan direcciones que pueden cambiar <
			 -----------------------------------------------------

		-El CheckArea_SUBR:	Linea   830.
		-El Locations Menu:	Linea  1547.
		-El Save/Load:		Lineas 2650 y 2655.
		-El CopyLargeData:	Lineas 3501 y 3502.

-------------------------------------------------------------------------------------------------------------------
													--------
				> Variables en memoria usados en Save/Load: <				-3 de 6-
				 -------------------------------------------				--------

>63038: Variable de la ayuda y de save/load. Ver 'Dirección 63038 (ayuda y save-load).txt'	-- 1 byte.

>63036: Dispositivo de Save/Load: 1>Tape, 2>Disk, 3>RAM.					-- 1 byte.

>63037: Modo de Save/Load: 1>Save, 0>Load, 2>Verify.						-- 1 byte.


				> Direcciones guardadas en Save/Load: <
				 -------------------------------------

>62984-62985: Posición de inicio de Save/Load.							-- 2 bytes.

>62986-62987: Longitud de datos a guardar con Save.						-- 2 bytes.

>62988-62989: Marca de inicion de selección/save-load.						-- 2 bytes.

>62990-62991: Marca final de selección/save.							-- 2 bytes.

	----------------------------------------------------------------------------------------------------

			>Al Save/Load (al salir del programa): 63038
			--------------------------------------------

	menor que 100: Sale al BASIC.
	100:	'Trigger' del guardado o la carga.
	101:	Grabar programa completo.
	102:	Load from file header.
	103:	???? Supongo que si ha de grabar en disco...

	-Al salir del Menu de Save/Load: Poner siempre a 0.

Los modos (variable md) son:

	0 - Es un Spectrum 48k o un 128 está en modo 48k. Sólo está disponible la cinta para save/load.
	1 - Es un Spectrum 128 o un Spectrum +2 (el gris). Está disponible la cinta y la RAM (con el signo !).
	2 - Es un Spectrum +2A/B o un +3. Está disponible la cinta y la RAM (acceso moderno con m:).
	3 - Es un Spectrum +2A/B con disco o un +3. Está disponible el disco, la cinta y la RAM (acceso con m:).

Dirección 63036: Guardar en Tape(1), Disk(2), RAM(3).

Dirección 63037: Cargar/guardar. Load(0), Save(1).

-------------------------------------------------------------------------------------------------------------------
													--------
					> Variables CharsetExp <					-4 de 6-
					 ----------------------						--------

	> Variables numericas de enteros POSINT (INT+, sin signo, entre 0 y 65535):
	--------------------------------------------------------------------------

		>Temporales:

 b: Se usa en muchas ocasiones.
 c: Se usa para el codigo del Inkey$. Se rehusa en varias ocasiones.
 f: Se usa sólo de momento para indicar la dirección de inicio para pokear 16bits en la memoria.
 g: Se usa sólo de momento para indicar el valor a pokear en la variable 'f'.
 n: Se usa en algun bucle IF... NEXT anidado. Se rehusa en multiples ocasiones.
 r: Se usa en multiples ocasiones.
 z: Se usa en casi todos los bucles IF... NEXT. Se rehusa en varias ocasiones.
di: Direccion para cambiar la variable del sistema CHARS. Se rehusa en varias ocasiones.

		>Fijas:

 a: Modo de copiado del clipboard. Char (1), byte (0), clipboard limpio (2).
 d: Direccion del primer byte del caracter seleccionado.
 h: Modo hexadecimal/decimal. Decimal (0), Hexadecimal (1).
 i: El color del borde, azul (1) o negro (0).
 p: Posicion Y de la barra de seleccion amarilla (0-7). (en MODO EDICION) Se usa para la
     coordenada Y del grid (0-7). --Y: ^ Eje vertical (altura) --
 u: Activacion de barra de UDG's. Off (0), On (1)¿, cambiar (2)?.
ag: Modo Sprites/AGD. On (1), Off (0).
ar: Determina el área (de la barra de Area) en la que estamos.
bi: Modo binario (1) o pixeles (0).
br: Se usa en el dibujado del pixel en la rejilla, creo que para saber si lo desactiva o activa.
dr: (en MODO EDICION) Pixel On (1), Off (0).
ed: Modo Edicion activo/inactivo. En Modo Edicion (1), en Modo Visor (0).
ee: Se activa al salir del modo edicion. Se acaba de salir (1), no se acaba de salir (0).
ex: (en MODO EDICION) Se usa para la coordenada X del grid. --X: > Eje horizontal (ancho) --
ic: El color del char que se está editando, en la ventanita esa con el recuadro.
md: Modo de Spectrum. 48k (0), 128/+2 (1), +2A/B/+3 -sin disco- (2), +2A/B -con disco-/+3 (3).
ol: Se usa en el dibujado del pixel en la rejilla, para guardar el valor del atributo de color.
ox: (en MODO EDICION) Se usa para la coordenada old X del grid.
oy: (en MODO EDICION) Se usa para la coordenada old Y del grid.
pa: Color del papel del grid (0-7).
ro: Se usa cuando se copia y pega, creo que para saber si copia un byte o un char.
sb: Modo Seamless Background. On (1), Off (0).
sv: Se usa para especificar si se dibuja el menú de Save o de Load, y actuar en consecuencia.
tn: El color de los puntos del fondo de la rejilla (los pixeles desactivados).
tp: El color de la tinta (los pixeles encendidos) de la rejilla.
zz: Dibujar Char o solo un byte. Char (7), byte (1).


	> Variables numericas de enteros INTEG (INT, con signo, entre -32768 y 32767):
	-----------------------------------------------------------------------------

os: Especifica el offset de la barra de Sprites.


	> Otras variables numericas (REALES):
	------------------------------------

 k: Variable temporal de numero REAL con signo (5 bytes).


	> Variables alfanumericas (STIRNG$ - cadenas de texto):
	------------------------------------------------------

h$: Secuencia de datos de 8 numeros en hexadecimal (16 caracteres de largo). Rehusada
     en varias ocasiones para pasar de hexadecimal a decimal.				-Longitud: 50
i$: Se usa para el texto superior (donde pone el modo de Spectrum).			-Longitud: 24
k$: Se usa para el ajedrezado del brillo de la rejilla, y seguramente en mas sitios.	-Longitud: 27
m$: Formato del pixel ON en el grid. Se rehusa en multitud de ocasiones.		-Longitud: 25
n$: Formato del pixel OFF en el grid. Se rehusa en multitud de ocasiones.		-Longitud: 24
v$: Valor de un byte. Rehusada en alguna ocasion.					-Longitud: 5


	> Arrays:
	--------

 p(): Array de una dimension y 11 huecos.
b$(): Array de dos dimensiones (16,12). -Longitud: ¿192?


	> Funciones de usuario:
	----------------------

 e (fn): Funcion DEF FN e(h$,z) -Hex2Dec- para pasar de hexadecimal a decimal valores de 8 bits
	 (z=1, de 0x00h a 0xFFh). La variable local 'z' es la posicion de la cadena local 'h$' de
	 la que lee. -- POSINT sin signo --
h$ (fn): Funcion DEF FN h$(z) -Dec2Hex- para pasar de decimal a hexadecimal valores de 8 bits (de
	 0 a 255). La variable local 'z' es el numero a ingresar (0-255). -- STRING$ --


	> Variables numericas dummy:
	---------------------------

 z: Usada como dummy local en 'e (fn)' -> DEF FN e(h$,z) y en 'h$ (fn)' -> DEF FN h$(z).
h$: Usada como dummy local en 'e (fn)' -> DEF FN e(h$,z).

-------------------------------------------------------------------------------------------------------------------
													--------
					> Lineas REM y subrutinas <					-5 de 6-
					 -------------------------					--------

Start									End
line	Routine							Type	line	( =  ends on the same line)
-----	-------							----	----

1	BASIC temp line (not used when compiled)			=
4	Compiler Directives						9
10	Program Starts Here						=
11	DEF fn Hex2Dec							=
12	DEF fn Dec2Hex							=
15	Read Hex						SUBR	=
17	Read Inkey (MAYS)					SUBR	18
18	|Read Inkey (noMAYS)					SUBR	=
20	Upper Info Text						SUBR	=
25	Posición de memoria actual (var 'd')			SUBR	=
27	Resetear posición de memoria actual por usr"a"			=
30	MH print Chars						SUBR	=
35	Char Bytes Sum						SUBR	=
36	Sprites Bar Print					SUBR	39

40	Shared Edit/View Inkey						54

55	Seamless Bkg Switch					SUBR	57
58	Beep128							SUBR	=
59	Beep48							SUBR	=
60	CHARS system Variable					SUBR	=
61	Change UDG system Variable				SUBR	=
62	Reset UDG system Variable				SUBR	=
63	Reset CHARS system Variable				SUBR	=
65	Clear Screen				SUBR	=
69	Swap CHARS system Variable		SUBR	=
74	Edit Rot/Inv/Bkg Text			SUBR	=
75	Sprites Mode Switch			SUBR	76
77	|Sprites Clear				SUBR	=
78	Edit Mode Bottom GUI			SUBR	=
79	Sprites Text (Spr) Print		SUBR	=
80	Original Char Before Modify Check	SUBR	82
82	|Original Char Before Modify Save	SUBR	=
84	Edit Draw&Del Text Print		SUBR	=
85	Selected Char Frame Check		SUBR	86
!86	|Selected Char Frame				=			(! = ¿?)
87	Dot&Square/0&1Binary Change UDG sv	SUBR	88
88	|Dot&Square/0&1Binary			SUBR	=

	 >Estas lineas REM fueron eliminadas del código original para liberar memoria:
	  ---------------------------------------------------------------------------

90	Edit Mode					-324-
95	|Inkey Start
124	|Edit Mode Reload char.				=
125	|Cursor Movement				160
165	|Pixel ON/OFF					166
167	|Dot						=
169	 Shared Routine				SUBR	=
170	|Reset Draw&Del
205	|Exit Edit					207
210	|Old Pixel Set					219
220	|XDraw ON/OFF					222
225	|KeyX (Draw)					=
227	|Key0 (Del)
230	 Move Char (6,7)			SUBR	237
240	 Move Char (9,8)			SUBR	248
246	 Refresh Modified Char & Bars		SUBR	248
247	 Refresh Char & Bars			SUBR	248
249	Shared Routine				SUBR	=
250	 SInvert Char				SUBR	=
255	 Flip Char				SUBR	270
280	 Rotate Char				SUBR	295
!290	 |Write Result
300	|Seamless Background			SUBR	=
315	|Draw Cursor				SUBR	=
316	|Prin tOld (DelCursor)			SUBR	=
319	|Keys O,P					324

330	Typewriter				SUBR	405

410	Save Marks					485
!410	|Mark Init (m)					---
!430	|Mark End (M)					---
440	|Marks Print				SUBR	449
450	|Marks Read				SUBR

525	Zero Value					=
530	Displacement					575
580	Selection Move					589
588	|Selection Bar				SUBR	589
!595	Reload Char
610	Main Inkey					742
760	UDG Info Bar				SUBR	779
780	Clear UDG bar				SUBR	785
810	Quit Prog					=
820	Check Area				SUBR	1027
!1000	|Position Bar					=
1030	Draw Char Grid				SUBR	1070
1080	Edit Mode Refresh Pos&UDG_bars		SUBR	1090

1250	2Hex					SUBR	=
1300	Swap Dec/Hex					1305
1430	Useful Locations Menu				1660

1690	Copy Byte				SUBR	1786
1800	|V_Paste				SUBR	=
1810	Copy Char				SUBR	1910
!1870	|Print Copied Char				=
1930	Copy Format				SUBR	1960
1980	Paste						2135
2150	Clear Clipboard					2200
2220	Grid Colour				SUBR	2233
2235	Grid Ink Colour					2238
2240	Grid Dots Colour				2245
2260	GUI bottom				SUBR	2285
2280	GUI bottom text				SUBR	2285
2320	GUI upper & HandIcon			SUBR	=

2500	Save/Load					3395
2570	|1-UDG						=
2580	|2-MH CharSets					=
2590	|3-One MH CharSet				=
2610	|4-From Marks					2627
2650	|5-From Custom Range				2665
2690	|6-Save ComplProg/Load File from Header		=
-------
2775	|Set Adress&exit				=
3490	|Shared negation beep				=

3500	Copy Large Data					3695
7175	|Sure? Edit Check Block			SUBR	7177
7180	|Sure? prompt				SUBR	7186
7190	Delete Char					7216
7220	Value Input					7240
7250	Address Input					7290
7330	Binary Array				SUBR	7340
7370	Binary GUI				SUBR	7395
7450	MicroHobby CharSets				7495

7600	Border Black Colour				7690

8990	Draw Box				SUBR	=
9000	Main Start					9030
9030	Check 48/128k Model				9090
9100	Setup						=
9150	Draw User Interface			

-------------------------------------------------------------------------------------------------------------------
													--------
						> To Do: <						-6 de 6-
						 --------						--------

-Linea 7216, GO SUB 246:GO TO 95, mirar mas lineas parecidas y simplificar en lo posible (7237). -- WHAT? --

-Si el caracter no es multiplo de 8 (se ha desplazado arriba o abajo), se puede editar
 el bloque si el cursor esta previamente en una zona permitida de escritura, aunque la
 otra parte del bloque esté en una zona protegida contra escritura.

-Que el cargar no chafe partes del programa. -- NO HAY PLANES PARA ARREGLARLO, TEN CUIDADO AL CARGAR --

-Chequear todas las posibilidades de guardado y carga en todos los modelos de Spectrum más conocidos.


			>Acerca de las marcas de selección:
			 ---------------------------------

 -Mirar donde hace el loop cuando comprueba si se va a borrar con SShift+X o +Z la zona
  de las variables y la rutina de MH charsets y simplificarlo.	-- FIXED, CREO --

 -No comprueba si se va a borrar una zona de la ROM.	-- FIXED --

 -No se puede seleccionar la dirección 00000.	-- ESTO SE VA A QUEDAR ASI CREO... --

 -Las direcciones no aparecen con ceros delante en las marcas de selección en decimal. -- FIXED --


			>Quitar al compilar:
			 ------------------

 -Borrar TODAS las linas que empiecen con un REM. -- HECHO --

 -Borrar TODOS los espacios del principio de subrutinas.

 -Cambiar TODOS los CODE = "*" por el numero del caracter.

 -Cambiar TODOS los VAL "numero" por solo el numero. Compilado ocupa menos espacio, creo.

 -La comprobacion de si existe la ayuda. -- YA NO HAY AYUDA INTEGRADA --

 -Borrar las lineas: 1
